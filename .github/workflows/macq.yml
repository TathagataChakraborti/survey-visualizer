name: macq

on:
  workflow_dispatch:
    branches: [main]

env:
  CONFIG_FILE_PATH: ./src/compiler/data/macq.yaml
  IMAGE_REPO: registry.heroku.com
  APP_NAME: macq
  HEROKU_PROCESS_TYPE: web
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  NEW_CONFIG_FILE: macq.yaml

jobs:
  setup-build-push-deploy:
    name: Setup, Build, Push, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install OS packages
        run: |
          sudo apt update
          sudo apt install -y nodejs npm curl python3-pip python3-setuptools
          node -v
          sudo npm install -g n
          sudo n 14.15.1
          node -v
          sudo npm install -g yarn
          sudo npm install -g newman
          pip3 install --upgrade --no-cache-dir huggingface-hub
          pip3 install --no-cache-dir -r "requirements.txt"
          pip3 install --no-cache-dir setuptools Levenshtein
          pip3 install --no-cache-dir -r ./src/deployments/deployment_requirements.txt
      - name: Handle Dropbox auth
        id: vars
        shell: bash
        env:
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_APP_REFRESH_TOKEN: ${{ secrets.DROPBOX_APP_REFRESH_TOKEN }}
          DROPBOX_AUTH_JSON_PATH: "./src/deployments/dropbox_auth.json"
          NEW_DROPBOX_AUTH_FILE: "postman_collection.json"
          DROPBOX_RESPONSE_FILE: "dropbox_response.txt"
          JSON_READER_PATH: "./src/deployments/json_reader.py"
        run: |
          sed -e "s/DROPBOX-APP-SECRET/\"$DROPBOX_APP_SECRET\"/g" -e "s/DROPBOX-APP-KEY/\"$DROPBOX_APP_KEY\"/g" -e "s/DROPBOX-APP-REFRESH-TOKEN/\"$DROPBOX_APP_REFRESH_TOKEN\"/g" $DROPBOX_AUTH_JSON_PATH > $NEW_DROPBOX_AUTH_FILE
          newman run --verbose $NEW_DROPBOX_AUTH_FILE | grep access_token -A 3 | sed -z 's/\n//g'| sed 's/ //g' | sed 's/\â”‚//g'> $DROPBOX_RESPONSE_FILE
          echo "::set-output name=dropbox_token::$(python $JSON_READER_PATH $DROPBOX_RESPONSE_FILE)"
      - name: Download & build dependencies
        env:
          DROPBOX_ACCESS_TOKEN: ${{steps.vars.outputs.dropbox_token}}
          DROPBOX_FOLDER: macq_pdf
          LOCAL_PDF_FOLDER: pdfs
          SLUG: ${{ secrets.MACQ_SLUG }}
          DROPBOX_HELPER_PATH: "./src/deployments/dropbox_helper.py"
        run: |
          curl -L "https://docs.google.com/spreadsheets/d/${SLUG}/export?format=xlsx" > slug.xlsx
          mkdir $LOCAL_PDF_FOLDER
          python $DROPBOX_HELPER_PATH $DROPBOX_ACCESS_TOKEN $DROPBOX_FOLDER $LOCAL_PDF_FOLDER
      - name: Edit app configuration
        env:
          SLUG_FILE_PATH_PATTERN: path\/to\/spreadsheet
          SLUG_FILE_PATH_PATTERN_TO_REPLACE_WITH: .\/slug.xlsx
          PDF_FOLDER_PATH_PATTERN: \/path\/to\/PDFs
          PDF_FOLDER_PATH_PATTERN_TO_REPLACE_WITH: .\/pdfs
          WORKSHEET_PATTERN: "active_worksheet: main"
          WORKSHEET_PATTERN_TO_REPLACE_WITH: "active_worksheet: slug"
        run: |
          sed -e "s/${SLUG_FILE_PATH_PATTERN}/${SLUG_FILE_PATH_PATTERN_TO_REPLACE_WITH}/g" -e "s/${PDF_FOLDER_PATH_PATTERN}/${PDF_FOLDER_PATH_PATTERN_TO_REPLACE_WITH}/g" -e "s/${WORKSHEET_PATTERN}/${WORKSHEET_PATTERN_TO_REPLACE_WITH}/g" $CONFIG_FILE_PATH > $NEW_CONFIG_FILE
      - name: Generate build sources
        run: python src/compiler/compile.py --file $NEW_CONFIG_FILE
      - name: Install node dependencies
        run: |
          yarn install --ignore-engines
      - name: Build app
        env:
          CI: ""
        run: yarn build
      - name: Build docker image
        env:
          Dockerfile_PATH: Dockerfile.heroku
        run: docker build -f $Dockerfile_PATH -t $IMAGE_REPO/$APP_NAME/$HEROKU_PROCESS_TYPE .
      - name: Setup Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          heroku container:login
      - name: Push docker image
        run: docker push $IMAGE_REPO/$APP_NAME/$HEROKU_PROCESS_TYPE
      - name: Update container image
        run: |
          heroku container:release $HEROKU_PROCESS_TYPE -a $APP_NAME
